version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rtandrew-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - rtandrew-network
    depends_on:
      - db
      - redis
    environment:
      - PHP_IDE_CONFIG=serverName=rtandrew

  nginx:
    image: nginx:alpine
    container_name: rtandrew-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - rtandrew-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: rtandrew-db
    restart: unless-stopped
    platform: linux/amd64
    environment:
      MYSQL_DATABASE: rtandrew
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: rtandrew
      MYSQL_PASSWORD: rtandrew
    volumes:
      - db_data:/var/lib/mysql
      - ./data_base_backup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - rtandrew-network

  redis:
    image: redis:7-alpine
    container_name: rtandrew-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - rtandrew-network

  node:
    image: node:16-alpine
    container_name: rtandrew-node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: sh -c "npm install && npm run watch"
    networks:
      - rtandrew-network
    depends_on:
      - app
    environment:
      - NODE_ENV=development

volumes:
  db_data:
    driver: local

networks:
  rtandrew-network:
    driver: bridge
