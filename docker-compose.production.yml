version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: rtandrew-app-prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - rtandrew-network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false

  nginx:
    image: nginx:alpine
    container_name: rtandrew-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - rtandrew-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: rtandrew-db-prod
    restart: unless-stopped
    platform: linux/amd64
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/mysql
    networks:
      - rtandrew-network

  redis:
    image: redis:7-alpine
    container_name: rtandrew-redis-prod
    restart: unless-stopped
    networks:
      - rtandrew-network

volumes:
  db_data_prod:
    driver: local

networks:
  rtandrew-network:
    driver: bridge
